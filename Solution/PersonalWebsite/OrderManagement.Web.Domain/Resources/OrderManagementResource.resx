<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="lblCreate" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="lblDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="lblEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="lblFirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="lblGender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="lblLastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="lblLogin" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="lblLoginPageTitle" xml:space="preserve">
    <value>Please login with your Username and Password.</value>
  </data>
  <data name="lblPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="lblProjectTitle" xml:space="preserve">
    <value>Demo</value>
  </data>
  <data name="lblRegister" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="lblRememberMe" xml:space="preserve">
    <value>Remember Me</value>
  </data>
  <data name="lblReTypePassword" xml:space="preserve">
    <value>Re-type Password</value>
  </data>
  <data name="lblSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="lblSubmit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="lblUserName" xml:space="preserve">
    <value>User Name \ Mobile No</value>
  </data>
  <data name="btnSaveAndClose" xml:space="preserve">
    <value>Save &amp; close</value>
  </data>
  <data name="btnSaveAndContinue" xml:space="preserve">
    <value>Save &amp; continue</value>
  </data>
  <data name="validationRange0To100" xml:space="preserve">
    <value>Please enter maximum 100 characters.</value>
  </data>
  <data name="validationRange0To1000" xml:space="preserve">
    <value>Please enter maximum 1000 characters.</value>
  </data>
  <data name="validationRange0To1024" xml:space="preserve">
    <value>Please enter maximum 1024 characters.</value>
  </data>
  <data name="validationRange0To200" xml:space="preserve">
    <value>Please enter maximum 200 characters.</value>
  </data>
  <data name="validationRange0To250" xml:space="preserve">
    <value>Please enter maximum 250 characters.</value>
  </data>
  <data name="validationRange0To255" xml:space="preserve">
    <value>Please enter maximum 255 characters.</value>
  </data>
  <data name="validationRange0To400" xml:space="preserve">
    <value>Please enter maximum 400 characters.</value>
  </data>
  <data name="validationRange0To50" xml:space="preserve">
    <value>Please enter maximum 50 characters.</value>
  </data>
  <data name="validationRange0To500" xml:space="preserve">
    <value>Please enter maximum 500 characters.</value>
  </data>
  <data name="validationRange0To5000" xml:space="preserve">
    <value>Please enter maximum 5000 characters.</value>
  </data>
  <data name="validationRangeBetween1To20" xml:space="preserve">
    <value>Please enter number between 1 and 20.</value>
  </data>
  <data name="validationRangeBetween1To999" xml:space="preserve">
    <value>Please enter number between 1 and 999.</value>
  </data>
  <data name="validationRangeBetween2To15" xml:space="preserve">
    <value>Please enter number between 2 and 15.</value>
  </data>
  <data name="validationRangeBetween2To20" xml:space="preserve">
    <value>Please enter number between 2 and 20.</value>
  </data>
  <data name="validationRangeCharacters3To50" xml:space="preserve">
    <value>Please enter minimum 3 and maxumum 50 characters.</value>
  </data>
  <data name="validationRangeGreaterThenZero" xml:space="preserve">
    <value>Please enter number greater than 0.</value>
  </data>
  <data name="validationRequiredComment" xml:space="preserve">
    <value>Please enter comment.</value>
  </data>
  <data name="validationRequiredEmailAccountPassword" xml:space="preserve">
    <value>Please enter email account password.</value>
  </data>
  <data name="validationRequiredEmailAccountUserName" xml:space="preserve">
    <value>Please enter email account username.</value>
  </data>
  <data name="validationRequiredEmailAddress" xml:space="preserve">
    <value>Please enter email address.</value>
  </data>
  <data name="validationRequiredFirstName" xml:space="preserve">
    <value>Please enter first name.</value>
  </data>
  <data name="validationRequiredLastName" xml:space="preserve">
    <value>Please enter last name.</value>
  </data>
  <data name="validationRequiredMaxPasswordLife" xml:space="preserve">
    <value>Please enter maximum password life.</value>
  </data>
  <data name="validationRequiredMinPasswordLength" xml:space="preserve">
    <value>Please enter minimum password length.</value>
  </data>
  <data name="validationRequiredMinQuontomOfCheck" xml:space="preserve">
    <value>Please enter minimum quontom of check.</value>
  </data>
  <data name="validationRequiredNewPassword" xml:space="preserve">
    <value>Please enter new password.</value>
  </data>
  <data name="validationRequiredPassword" xml:space="preserve">
    <value>Please enter password.</value>
  </data>
  <data name="validationRequiredUserName" xml:space="preserve">
    <value>Please enter username.</value>
  </data>
  <data name="msgIncorrectUserNameAndPassword" xml:space="preserve">
    <value>The username or password you entered is incorrect.</value>
  </data>
  <data name="IsActive" xml:space="preserve">
    <value>IsActive</value>
  </data>
  <data name="lblActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="lblAliasName" xml:space="preserve">
    <value>Alias Name</value>
  </data>
  <data name="lblCategoryList" xml:space="preserve">
    <value>Catgeory List</value>
  </data>
  <data name="lblCategoryName" xml:space="preserve">
    <value>Category Name</value>
  </data>
  <data name="lblCreationDate" xml:space="preserve">
    <value>Creation Datetime</value>
  </data>
  <data name="lblDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblInactive" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="lblView" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="msgConfirmDeleteCategory" xml:space="preserve">
    <value>Are you sure you want to delete category.</value>
  </data>
  <data name="lblMobileNo" xml:space="preserve">
    <value>Mobile No</value>
  </data>
  <data name="lblOrganizationName" xml:space="preserve">
    <value>Organization Name</value>
  </data>
  <data name="validationRequiredMobileNo" xml:space="preserve">
    <value>Please enter mobile no.</value>
  </data>
  <data name="validationRequiredOrganizationName" xml:space="preserve">
    <value>Please enter organization name.</value>
  </data>
  <data name="lblAvailable" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="lblCreateAccount" xml:space="preserve">
    <value>Create Account</value>
  </data>
  <data name="lblForgotPassword" xml:space="preserve">
    <value>Forgot Password</value>
  </data>
  <data name="validationMobileNo" xml:space="preserve">
    <value>Please enter must be 10 characters number.</value>
  </data>
  <data name="validationPasswordRangeBetween4To12" xml:space="preserve">
    <value>Please enter password between 4 and 12.</value>
  </data>
  <data name="validationRegularMobileNo" xml:space="preserve">
    <value>Invalid mobile no value must contain 10 value size.</value>
  </data>
  <data name="msgDiableUserAccount" xml:space="preserve">
    <value>Your account is disabled please contact admin for more details.</value>
  </data>
  <data name="msgMobileNoExists" xml:space="preserve">
    <value>Mobile no already exists please delete your mobile from last organization then you can continue using this.</value>
  </data>
  <data name="lblRegisterSuccess" xml:space="preserve">
    <value>Register Success</value>
  </data>
  <data name="msgRegisterSuccess" xml:space="preserve">
    <value>You are register successfully with us. Login your self and get benift with us.</value>
  </data>
  <data name="msgOrganizationNameExists" xml:space="preserve">
    <value>Organization name already register with us.</value>
  </data>
</root>