//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/01/18 - 22:03:44
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderManagement.Web.Domain;
using OrderManagement.Web.Database;

namespace OrderManagement.Web.Domain.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="tblOrderStatu"/> and <see cref="tblOrderStatuDTO"/>.
    /// </summary>
    public static partial class tblOrderStatuAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblOrderStatuDTO"/> converted from <see cref="tblOrderStatu"/>.</param>
        static partial void OnDTO(this tblOrderStatu entity, tblOrderStatuDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblOrderStatu"/> converted from <see cref="tblOrderStatuDTO"/>.</param>
        static partial void OnEntity(this tblOrderStatuDTO dto, tblOrderStatu entity);

        /// <summary>
        /// Converts this instance of <see cref="tblOrderStatuDTO"/> to an instance of <see cref="tblOrderStatu"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblOrderStatuDTO"/> to convert.</param>
        public static tblOrderStatu ToEntity(this tblOrderStatuDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblOrderStatu();

            entity.StatusId = dto.StatusId;
            entity.StatusName = dto.StatusName;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblOrderStatu"/> to an instance of <see cref="tblOrderStatuDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblOrderStatu"/> to convert.</param>
        public static tblOrderStatuDTO ToDTO(this tblOrderStatu entity)
        {
            if (entity == null) return null;

            var dto = new tblOrderStatuDTO();

            dto.StatusId = entity.StatusId;
            dto.StatusName = entity.StatusName;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblOrderStatuDTO"/> to an instance of <see cref="tblOrderStatu"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblOrderStatu> ToEntities(this IEnumerable<tblOrderStatuDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblOrderStatu"/> to an instance of <see cref="tblOrderStatuDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblOrderStatuDTO> ToDTOs(this IEnumerable<tblOrderStatu> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
