//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2013-10-10 - 10:49:52
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderManagement.Web.Domain;
using OrderManagement.Web.Database;

namespace OrderManagement.Web.Domain
{

    /// <summary>
    /// Assembler for <see cref="tbl_AdminLogin"/> and <see cref="tbl_AdminLogin_DTO"/>.
    /// </summary>
    public static partial class tbl_AdminLogin_Assembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tbl_AdminLogin_DTO"/> converted from <see cref="tbl_AdminLogin"/>.</param>
        static partial void OnDTO(this tbl_AdminLogin entity, tbl_AdminLogin_DTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tbl_AdminLogin"/> converted from <see cref="tbl_AdminLogin_DTO"/>.</param>
        static partial void OnEntity(this tbl_AdminLogin_DTO dto, tbl_AdminLogin entity);

        /// <summary>
        /// Converts this instance of <see cref="tbl_AdminLogin_DTO"/> to an instance of <see cref="tbl_AdminLogin"/>.
        /// </summary>
        /// <param name="dto"><see cref="tbl_AdminLogin_DTO"/> to convert.</param>
        public static tbl_AdminLogin ToEntity(this tbl_AdminLogin_DTO dto)
        {
            if (dto == null) return null;

            var entity = new tbl_AdminLogin();

            entity.AdminLoginId = dto.AdminLoginId;
            entity.FirstName = dto.FirstName;
            entity.LastName = dto.LastName;
            entity.UserName = dto.UserName;
            entity.Password = dto.Password;
            entity.RegisterDate = dto.RegisterDate;
            entity.IsActive = dto.IsActive;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tbl_AdminLogin"/> to an instance of <see cref="tbl_AdminLogin_DTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tbl_AdminLogin"/> to convert.</param>
        public static tbl_AdminLogin_DTO ToDTO(this tbl_AdminLogin entity)
        {
            if (entity == null) return null;

            var dto = new tbl_AdminLogin_DTO();

            dto.AdminLoginId = entity.AdminLoginId;
            dto.FirstName = entity.FirstName;
            dto.LastName = entity.LastName;
            dto.UserName = entity.UserName;
            dto.Password = entity.Password;
            dto.RegisterDate = entity.RegisterDate;
            dto.IsActive = entity.IsActive;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tbl_AdminLogin_DTO"/> to an instance of <see cref="tbl_AdminLogin"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tbl_AdminLogin> ToEntities(this IEnumerable<tbl_AdminLogin_DTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tbl_AdminLogin"/> to an instance of <see cref="tbl_AdminLogin_DTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tbl_AdminLogin_DTO> ToDTOs(this IEnumerable<tbl_AdminLogin> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
