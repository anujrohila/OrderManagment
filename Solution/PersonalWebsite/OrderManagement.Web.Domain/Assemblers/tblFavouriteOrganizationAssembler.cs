//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/01/18 - 22:03:44
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderManagement.Web.Domain;
using OrderManagement.Web.Database;

namespace OrderManagement.Web.Domain.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="tblFavouriteOrganization"/> and <see cref="tblFavouriteOrganizationDTO"/>.
    /// </summary>
    public static partial class tblFavouriteOrganizationAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblFavouriteOrganizationDTO"/> converted from <see cref="tblFavouriteOrganization"/>.</param>
        static partial void OnDTO(this tblFavouriteOrganization entity, tblFavouriteOrganizationDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblFavouriteOrganization"/> converted from <see cref="tblFavouriteOrganizationDTO"/>.</param>
        static partial void OnEntity(this tblFavouriteOrganizationDTO dto, tblFavouriteOrganization entity);

        /// <summary>
        /// Converts this instance of <see cref="tblFavouriteOrganizationDTO"/> to an instance of <see cref="tblFavouriteOrganization"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblFavouriteOrganizationDTO"/> to convert.</param>
        public static tblFavouriteOrganization ToEntity(this tblFavouriteOrganizationDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblFavouriteOrganization();

            entity.FavouriteId = dto.FavouriteId;
            entity.FavOrganizationId = dto.FavOrganizationId;
            entity.UserId = dto.UserId;
            entity.CreationOn = dto.CreationOn;
            entity.ModifiedOn = dto.ModifiedOn;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblFavouriteOrganization"/> to an instance of <see cref="tblFavouriteOrganizationDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblFavouriteOrganization"/> to convert.</param>
        public static tblFavouriteOrganizationDTO ToDTO(this tblFavouriteOrganization entity)
        {
            if (entity == null) return null;

            var dto = new tblFavouriteOrganizationDTO();

            dto.FavouriteId = entity.FavouriteId;
            dto.FavOrganizationId = entity.FavOrganizationId;
            dto.UserId = entity.UserId;
            dto.CreationOn = entity.CreationOn;
            dto.ModifiedOn = entity.ModifiedOn;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblFavouriteOrganizationDTO"/> to an instance of <see cref="tblFavouriteOrganization"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblFavouriteOrganization> ToEntities(this IEnumerable<tblFavouriteOrganizationDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblFavouriteOrganization"/> to an instance of <see cref="tblFavouriteOrganizationDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblFavouriteOrganizationDTO> ToDTOs(this IEnumerable<tblFavouriteOrganization> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
