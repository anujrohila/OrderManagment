//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-01-21 - 18:22:51
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderManagement.Web.Domain;
using OrderManagement.Web.Database;

namespace OrderManagement.Web.Domain
{

    /// <summary>
    /// Assembler for <see cref="tblSMSQueue"/> and <see cref="tblSMSQueueDTO"/>.
    /// </summary>
    public static partial class tblSMSQueueAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblSMSQueueDTO"/> converted from <see cref="tblSMSQueue"/>.</param>
        static partial void OnDTO(this tblSMSQueue entity, tblSMSQueueDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblSMSQueue"/> converted from <see cref="tblSMSQueueDTO"/>.</param>
        static partial void OnEntity(this tblSMSQueueDTO dto, tblSMSQueue entity);

        /// <summary>
        /// Converts this instance of <see cref="tblSMSQueueDTO"/> to an instance of <see cref="tblSMSQueue"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblSMSQueueDTO"/> to convert.</param>
        public static tblSMSQueue ToEntity(this tblSMSQueueDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblSMSQueue();

            entity.RowId = dto.RowId;
            entity.MobileNo = dto.MobileNo;
            entity.Message = dto.Message;
            entity.CreationDateTime = dto.CreationDateTime;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblSMSQueue"/> to an instance of <see cref="tblSMSQueueDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblSMSQueue"/> to convert.</param>
        public static tblSMSQueueDTO ToDTO(this tblSMSQueue entity)
        {
            if (entity == null) return null;

            var dto = new tblSMSQueueDTO();

            dto.RowId = entity.RowId;
            dto.MobileNo = entity.MobileNo;
            dto.Message = entity.Message;
            dto.CreationDateTime = entity.CreationDateTime;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblSMSQueueDTO"/> to an instance of <see cref="tblSMSQueue"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblSMSQueue> ToEntities(this IEnumerable<tblSMSQueueDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblSMSQueue"/> to an instance of <see cref="tblSMSQueueDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblSMSQueueDTO> ToDTOs(this IEnumerable<tblSMSQueue> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
