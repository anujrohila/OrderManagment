//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2013-10-25 - 09:52:24
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderManagement.Web.Domain;
using OrderManagement.Web.Database;

namespace OrderManagement.Web.Domain
{

    /// <summary>
    /// Assembler for <see cref="tbl_Category"/> and <see cref="tbl_Category_DTO"/>.
    /// </summary>
    public static partial class tbl_Category_Assembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tbl_Category_DTO"/> converted from <see cref="tbl_Category"/>.</param>
        static partial void OnDTO(this tbl_Category entity, tbl_Category_DTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tbl_Category"/> converted from <see cref="tbl_Category_DTO"/>.</param>
        static partial void OnEntity(this tbl_Category_DTO dto, tbl_Category entity);

        /// <summary>
        /// Converts this instance of <see cref="tbl_Category_DTO"/> to an instance of <see cref="tbl_Category"/>.
        /// </summary>
        /// <param name="dto"><see cref="tbl_Category_DTO"/> to convert.</param>
        public static tbl_Category ToEntity(this tbl_Category_DTO dto)
        {
            if (dto == null) return null;

            var entity = new tbl_Category();

            entity.CategoryId = dto.CategoryId;
            entity.CatgeoryName = dto.CatgeoryName;
            entity.AliasName = dto.AliasName;
            entity.Description = dto.Description;
            entity.CreationDateTime = dto.CreationDateTime;
            entity.IsActive = dto.IsActive;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tbl_Category"/> to an instance of <see cref="tbl_Category_DTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tbl_Category"/> to convert.</param>
        public static tbl_Category_DTO ToDTO(this tbl_Category entity)
        {
            if (entity == null) return null;

            var dto = new tbl_Category_DTO();

            dto.CategoryId = entity.CategoryId;
            dto.CatgeoryName = entity.CatgeoryName;
            dto.AliasName = entity.AliasName;
            dto.Description = entity.Description;
            dto.CreationDateTime = entity.CreationDateTime;
            dto.IsActive = entity.IsActive;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tbl_Category_DTO"/> to an instance of <see cref="tbl_Category"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tbl_Category> ToEntities(this IEnumerable<tbl_Category_DTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tbl_Category"/> to an instance of <see cref="tbl_Category_DTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tbl_Category_DTO> ToDTOs(this IEnumerable<tbl_Category> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
